/* Generated By:JJTree&JavaCC: Do not edit this line. ASPParserTokenManager.java */
package org.tweetyproject.lp.asp.parser;

/** Token Manager. */
public class ASPParserTokenManager implements ASPParserConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
  /**
   *
   * @param pos position
   * @param active0 long
   * @return int
   */
private final int jjStopStringLiteralDfa_0(int pos, long active0)
{
   switch (pos)
   {
      case 0:
         if ((active0 & 0x738000000000L) != 0L)
            return 35;
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 9;
            return 9;
         }
         if ((active0 & 0x2800000000L) != 0L)
            return 23;
         return -1;
      case 1:
         if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
            return 77;
         }
         if ((active0 & 0x30000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
            return 34;
         }
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 9;
            jjmatchedPos = 1;
            return 9;
         }
         if ((active0 & 0x300000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
            return 53;
         }
         if ((active0 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 1;
            return 127;
         }
         return -1;
      case 2:
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 33;
         }
         if ((active0 & 0x300000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 81;
         }
         if ((active0 & 0x10000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 41;
         }
         if ((active0 & 0x400000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 138;
         }
         if ((active0 & 0x8000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 2;
            return 76;
         }
         if ((active0 & 0x80L) != 0L)
            return 9;
         return -1;
      case 3:
         if ((active0 & 0x408000000000L) != 0L)
         {
            if (jjmatchedPos != 3)
            {
               jjmatchedKind = 53;
               jjmatchedPos = 3;
            }
            return 138;
         }
         if ((active0 & 0x300000000000L) != 0L)
            return 138;
         if ((active0 & 0x20000000000L) != 0L)
            return 32;
         if ((active0 & 0x10000000000L) != 0L)
            return 40;
         return -1;
      case 4:
         if ((active0 & 0x408000000000L) != 0L)
         {
            jjmatchedKind = 53;
            jjmatchedPos = 4;
            return 138;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 35:
         return jjMoveStringLiteralDfa1_0(0x738000000000L);
      case 40:
         return jjStopAtPos(0, 27);
      case 41:
         return jjStopAtPos(0, 28);
      case 42:
         return jjStopAtPos(0, 23);
      case 43:
         return jjStopAtPos(0, 21);
      case 44:
         return jjStopAtPos(0, 15);
      case 45:
         return jjStopAtPos(0, 22);
      case 46:
         return jjStopAtPos(0, 14);
      case 47:
         return jjStopAtPos(0, 24);
      case 58:
         jjmatchedKind = 17;
         return jjMoveStringLiteralDfa1_0(0x180000L);
      case 59:
         return jjStopAtPos(0, 18);
      case 60:
         jjmatchedKind = 35;
         return jjMoveStringLiteralDfa1_0(0x2000000000L);
      case 62:
         jjmatchedKind = 36;
         return jjMoveStringLiteralDfa1_0(0x4000000000L);
      case 63:
         return jjStopAtPos(0, 16);
      case 64:
         return jjStopAtPos(0, 26);
      case 91:
         return jjStopAtPos(0, 29);
      case 92:
         return jjStopAtPos(0, 25);
      case 93:
         return jjStopAtPos(0, 30);
      case 95:
         return jjStopAtPos(0, 13);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x80L);
      case 123:
         return jjStopAtPos(0, 31);
      case 125:
         return jjStopAtPos(0, 32);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 45:
         if ((active0 & 0x80000L) != 0L)
            return jjStopAtPos(1, 19);
         break;
      case 61:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 37);
         else if ((active0 & 0x4000000000L) != 0L)
            return jjStopAtPos(1, 38);
         break;
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000000000L);
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x30000000000L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x80L);
      case 115:
         return jjMoveStringLiteralDfa2_0(active0, 0x300000000000L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000L);
      case 126:
         if ((active0 & 0x100000L) != 0L)
            return jjStopAtPos(1, 20);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x10000000000L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x420000000000L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000L);
      case 116:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(2, 7, 9);
         break;
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x300000000000L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0);
      return 3;
   }
   switch(curChar)
   {
      case 109:
         if ((active0 & 0x100000000000L) != 0L)
         {
            jjmatchedKind = 44;
            jjmatchedPos = 3;
         }
         return jjMoveStringLiteralDfa4_0(active0, 0x600000000000L);
      case 110:
         if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 41, 32);
         break;
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x8000000000L);
      case 120:
         if ((active0 & 0x10000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 40, 40);
         break;
      default :
         break;
   }
   return jjStartNfa_0(2, active0);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0);
      return 4;
   }
   switch(curChar)
   {
      case 43:
         if ((active0 & 0x200000000000L) != 0L)
            return jjStopAtPos(4, 45);
         break;
      case 101:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0)
{
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0);
      return 5;
   }
   switch(curChar)
   {
      case 115:
         if ((active0 & 0x400000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 46, 138);
         break;
      case 116:
         if ((active0 & 0x8000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 39, 138);
         break;
      default :
         break;
   }
   return jjStartNfa_0(4, active0);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 177;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 33:
               case 138:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 34:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 53:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 76:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 0:
                  if ((0x3fe000000000000L & l) != 0L)
                  {
                     if (kind > 12)
                        kind = 12;
                     jjCheckNAdd(19);
                  }
                  else if (curChar == 35)
                     jjAddStates(0, 16);
                  else if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 25;
                  else if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 21;
                  else if (curChar == 48)
                  {
                     if (kind > 12)
                        kind = 12;
                  }
                  else if (curChar == 34)
                     jjCheckNAddStates(17, 19);
                  else if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 2;
                  if (curChar == 35)
                     jjAddStates(20, 24);
                  else if (curChar == 61)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  else if (curChar == 37)
                  {
                     if (kind > 5)
                        kind = 5;
                     jjCheckNAdd(1);
                  }
                  break;
               case 127:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 77:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 32:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 81:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 41:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 40:
                  if ((0x23ff000000000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 1:
                  if ((0xfffffffffffffbffL & l) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjCheckNAdd(1);
                  break;
               case 2:
                  if (curChar == 42)
                     jjCheckNAddTwoStates(3, 5);
                  break;
               case 3:
                  if ((0xffffffdfffffffffL & l) != 0L)
                     jjCheckNAddTwoStates(3, 5);
                  break;
               case 4:
                  if (curChar == 37 && kind > 6)
                     kind = 6;
                  break;
               case 5:
                  if (curChar == 42)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 37)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 9:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 12:
               case 14:
                  if (curChar == 34)
                     jjCheckNAddStates(17, 19);
                  break;
               case 13:
                  if ((0xfffffffbffffffffL & l) != 0L)
                     jjCheckNAddStates(17, 19);
                  break;
               case 16:
                  if (curChar == 34 && kind > 11)
                     kind = 11;
                  break;
               case 17:
                  if (curChar == 48 && kind > 12)
                     kind = 12;
                  break;
               case 18:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(19);
                  break;
               case 19:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 12)
                     kind = 12;
                  jjCheckNAdd(19);
                  break;
               case 20:
               case 21:
                  if (curChar == 61 && kind > 33)
                     kind = 33;
                  break;
               case 22:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 62 && kind > 34)
                     kind = 34;
                  break;
               case 24:
                  if (curChar == 60)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 61 && kind > 34)
                     kind = 34;
                  break;
               case 26:
                  if (curChar == 33)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 35)
                     jjAddStates(20, 24);
                  break;
               case 44:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 46:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(25, 26);
                  break;
               case 47:
                  if (curChar == 47)
                     jjAddStates(27, 28);
                  break;
               case 48:
                  if (curChar == 48 && kind > 47)
                     kind = 47;
                  break;
               case 49:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(50);
                  break;
               case 50:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  jjCheckNAdd(50);
                  break;
               case 56:
                  if (curChar == 32)
                     jjAddStates(29, 30);
                  break;
               case 57:
                  if (curChar == 48 && kind > 48)
                     kind = 48;
                  break;
               case 58:
                  if ((0x3fe000000000000L & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(59);
                  break;
               case 59:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 48)
                     kind = 48;
                  jjCheckNAdd(59);
                  break;
               case 60:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 61:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 67:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 69:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjAddStates(31, 32);
                  break;
               case 70:
                  if (curChar == 32)
                     jjCheckNAdd(71);
                  break;
               case 71:
                  if ((0x3ff130000000000L & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjCheckNAdd(71);
                  break;
               case 72:
                  if (curChar == 61)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 73:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 72;
                  break;
               case 79:
                  if (curChar == 35)
                     jjAddStates(0, 16);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 33:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 32;
                  break;
               case 35:
                  if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 108)
                     jjAddStates(33, 34);
                  else if (curChar == 97)
                     jjAddStates(35, 36);
                  else if (curChar == 105)
                     jjAddStates(37, 39);
                  else if (curChar == 114)
                     jjAddStates(40, 41);
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 135;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 131;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 123;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 116;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 110;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 106;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 94;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 85;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 77;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 127;
                  else if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 101;
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 88;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 82;
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 65;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 53;
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 42;
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 34:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 115;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 87;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 64;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 33;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 53:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 122;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 52;
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 76:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 0:
                  if ((0x7fffffeL & l) != 0L)
                  {
                     if (kind > 10)
                        kind = 10;
                     jjCheckNAdd(11);
                  }
                  else if ((0x7fffffe00000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                     jjCheckNAdd(9);
                  }
                  if ((0x1040000000000000L & l) != 0L)
                  {
                     if (kind > 8)
                        kind = 8;
                  }
                  break;
               case 127:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 130;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 77:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 32:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 81:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 121;
                  else if (curChar == 99)
                     jjCheckNAdd(80);
                  break;
               case 41:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 63;
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 40:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 53)
                        kind = 53;
                     jjCheckNAdd(138);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 62;
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 1:
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  jjAddStates(42, 43);
                  break;
               case 7:
                  if ((0x1040000000000000L & l) != 0L && kind > 8)
                     kind = 8;
                  break;
               case 8:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(9);
                  break;
               case 9:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 9)
                     kind = 9;
                  jjCheckNAdd(9);
                  break;
               case 10:
                  if ((0x7fffffeL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(11);
                  break;
               case 11:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 10)
                     kind = 10;
                  jjCheckNAdd(11);
                  break;
               case 13:
                  if ((0xffffffffefffffffL & l) != 0L)
                     jjAddStates(17, 19);
                  break;
               case 15:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 28:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 29:
                  if ((0x408000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 30:
                  if (curChar == 101 && kind > 42)
                     kind = 42;
                  break;
               case 31:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 36:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 37:
                  if ((0x408000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 38:
                  if (curChar == 101 && kind > 43)
                     kind = 43;
                  break;
               case 39:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 42:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 45:
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(46, 47);
                  break;
               case 46:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(46, 47);
                  break;
               case 51:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 52:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 54:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 62:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 63:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 68:
                  if ((0x7fffffe00000000L & l) != 0L)
                     jjCheckNAddTwoStates(69, 73);
                  break;
               case 69:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     jjCheckNAddTwoStates(69, 73);
                  break;
               case 71:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 49)
                     kind = 49;
                  jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 74:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 67;
                  break;
               case 75:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 78:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 77;
                  break;
               case 80:
                  if (curChar == 99 && kind > 50)
                     kind = 50;
                  break;
               case 82:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 81;
                  break;
               case 83:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 82;
                  break;
               case 84:
                  if (curChar == 101)
                     jjCheckNAdd(80);
                  break;
               case 85:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 84;
                  break;
               case 86:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 87:
                  if (curChar == 100 && kind > 50)
                     kind = 50;
                  break;
               case 88:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 104 && kind > 51)
                     kind = 51;
                  break;
               case 91:
               case 103:
               case 155:
               case 173:
                  if (curChar == 116)
                     jjCheckNAdd(90);
                  break;
               case 92:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 110 && kind > 51)
                     kind = 51;
                  break;
               case 97:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 101:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 102:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 104:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 100 && kind > 51)
                     kind = 51;
                  break;
               case 109:
                  if (curChar == 97)
                     jjCheckNAdd(108);
                  break;
               case 110:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 114 && kind > 51)
                     kind = 51;
                  break;
               case 113:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 116:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 116 && kind > 51)
                     kind = 51;
                  break;
               case 119:
               case 150:
               case 171:
                  if (curChar == 115)
                     jjCheckNAdd(118);
                  break;
               case 120:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 123;
                  break;
               case 125:
                  if (curChar == 108 && kind > 51)
                     kind = 51;
                  break;
               case 126:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 128:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 101 && kind > 52)
                     kind = 52;
                  break;
               case 130:
                  if (curChar == 117)
                     jjCheckNAdd(129);
                  break;
               case 131:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 115)
                     jjCheckNAdd(129);
                  break;
               case 134:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if ((0x7fffffe00000000L & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 138:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 53)
                     kind = 53;
                  jjCheckNAdd(138);
                  break;
               case 139:
                  if (curChar == 114)
                     jjAddStates(40, 41);
                  break;
               case 140:
               case 166:
                  if (curChar == 110)
                     jjCheckNAdd(108);
                  break;
               case 141:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 101 && kind > 51)
                     kind = 51;
                  break;
               case 143:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 105)
                     jjAddStates(37, 39);
                  break;
               case 149:
                  if (curChar == 110)
                     jjCheckNAdd(118);
                  break;
               case 151:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 152:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 156:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 159:
                  if (curChar == 97)
                     jjAddStates(35, 36);
                  break;
               case 160:
                  if (curChar == 102 && kind > 51)
                     kind = 51;
                  break;
               case 161:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 163;
                  break;
               case 165:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 167:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 108)
                     jjAddStates(33, 34);
                  break;
               case 172:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 174:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) == 0L)
                     break;
                  if (kind > 5)
                     kind = 5;
                  jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(42, 43);
                  break;
               case 13:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     jjAddStates(17, 19);
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 177 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   83, 86, 89, 95, 102, 107, 111, 117, 124, 128, 132, 136, 137, 139, 148, 159,
   170, 13, 15, 16, 35, 43, 54, 66, 78, 46, 47, 48, 49, 57, 58, 69,
   73, 172, 176, 165, 169, 149, 154, 158, 141, 147, 3, 5,
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, "\156\157\164", null, null, null, null,
null, "\137", "\56", "\54", "\77", "\72", "\73", "\72\55", "\72\176", "\53", "\55",
"\52", "\57", "\134", "\100", "\50", "\51", "\133", "\135", "\173", "\175", null,
null, "\74", "\76", "\74\75", "\76\75", "\43\143\157\165\156\164",
"\43\155\141\170", "\43\155\151\156", null, null, "\43\163\165\155", "\43\163\165\155\53",
"\43\164\151\155\145\163", null, null, null, null, null, null, null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0x3fffffffffff81L,
};
static final long[] jjtoSkip = {
   0x7eL,
};
/**
 * protected SimpleCharStream input_stream
 */
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[177];
private final int[] jjstateSet = new int[354];
/**
 * proteced char curChar
 */
protected char curChar;
/** Constructor. */
/**
 *
 * @param stream ASPParserTokenManager
 */
public ASPParserTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
/**
 *
 * @param stream ASPParser
 * @param lexState ASPParser
 */
public ASPParserTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
/**
 *
 * @param stream ReInit
 */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 177; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
/**
 *
 * @param stream ReInit
 * @param lexState ReInit
 */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
/**
 *
 * @param lexState SwitchTo
 */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

/**
 *
 * @return jjFillToken
 */
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
/**
 *
 * @return getNextToken
 */
public Token getNextToken()
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }

   try { input_stream.backup(0);
      while (curChar <= 32 && (0x100002600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
